var pieceClasses = ["wp", "wn", "wb", "wr", "wq", "wk", "bp", "bn", "bb", "br", "bq", "bk"];
var whitePieceClasses = ["wp", "wn", "wb", "wr", "wq", "wk"];
var blackPieceClasses = ["bp", "bn", "bb", "br", "bq", "bk"];
var pieceConversionLookUp = {
  "1" : "wp",
  "2" : "wn",
  "3" : "wb",
  "4" : "wr",
  "5" : "wq",
  "6" : "wk",
  "-1" : "bp",
  "-2" : "bn",
  "-3" : "bb",
  "-4" : "br",
  "-5" : "bq",
  "-6" : "bk",
  "0" : ""
}

function isSquareSelected($square) {
  if ($square.hasClass("white-square-highlight") || $square.hasClass("black-square-highlight")) {
    return true;
  } else {
    return false;
  }
}

function drawBoard(boardData) {
  var counter = 0;
  $("td").removeClass(pieceClasses.join(" "));
  $("td").removeClass("white-square-highlight black-square-highlight");
  $("tr").each(function() {
    $(this).find("td").each(function() {
      $(this).addClass(pieceConversionLookUp[boardData[counter]]);
      counter += 1;
    });
  });
}

function squareSelectHighlight($square) {
  var color = $square.hasClass("white") ? "white" : "black";
  if (isSquareSelected($square)) {
    $("td").removeClass("white-square-highlight black-square-highlight");
  } else {
    $("td").removeClass("white-square-highlight black-square-highlight");
    $square.addClass(color + "-square-highlight");
  }
}

function isTurnPlayersPiece($square) {
  if (
    (whiteToMove && whitePieceClasses.includes($square.attr("class").split(" ")[1])) || 
    (!whiteToMove && blackPieceClasses.includes($square.attr("class").split(" ")[1]))
  ) {
    return true;
  } else {
    return false;
  }
}

function isAnyPieceSelected() {
  var result = false;
  $("td").each(function() {
    if (isSquareSelected($(this))) {
      result = true;
    }
  });
  return result;
}

function getBoardData() {
  $.get("/data/" + gameId, function(data) {
    boardData = data["board_data"].split(",");
    whiteToMove = data["white_to_move"];
    drawBoard(boardData);
  });
}

function isPawnPromoted(move) {  
  var isPawn = $("#" + selectedPiece).attr("class").split("").includes("p");
  if (whiteToMove && move[2] == 0 && isPawn)  {
    return true;
  } else if (!whiteToMove && move[2] == 7 && isPawn) {
    return true;
  } else {
    return false;
  }
}

function updateColorToMove() {
  if (whiteToMove) {
    $("#turn-player").text("White to move");
  } else {
    $("#turn-player").text("Black to move");
  }  
}

function sendMoveToServer(move) {
  $.ajax({
    type: "POST",
    url: "/move",
    data: {
      "move" : move,
      "gameId" : gameId
    },
    success: function() {
      updateColorToMove();
    }
  });
}

var boardData;
var whiteToMove;
var moves;
var castling;
var selectedPiece;
var gameId = "<%= @game_id %>";
var move;

$(document).ready(function(){
  getBoardData();
  <% if @game.full? %>
    $(".promote-button > img").click(function() {
      var moveWithPromotion = move + $(this).parent().attr("id");
      sendMoveToServer(moveWithPromotion);
      $(".board-filter").css({"display" : "none"});
    });
    $("td").click(function(){
      var $square = $(this);
      if (isTurnPlayersPiece($square)) {
        squareSelectHighlight($square);
        selectedPiece = $square.attr("id");
      } else if (isAnyPieceSelected()) {
        move = selectedPiece + $square.attr("id");
        if (isPawnPromoted(move)) {
          $(".board-filter").css({"display" : "flex"});
        } else {
          sendMoveToServer(move);
        }
      }
    });
  <% end %>
});